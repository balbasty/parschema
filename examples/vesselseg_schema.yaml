$schema: http://json-schema.org/draft-06/schema
$id: http://github.com/balbasty/vesselseg/schemas/oct.train.yaml
title: VesselSeg OCT trainer
description: Train a VesselSeg model for OCT data
x-simpletag: true
properties:

  data:
    description: All parameters related to training data
    type: object
    properties:
      train:
        description: Training data (folder or list of files)
        type: [string, array]
        items: { type: string }
        minItems: 1
        x-action:
          - MakeList
        x-check:
          - PathExists
      eval:
        description: Evaluation data (folder or list of files)
        type: [string, array]
        items: { type: string }
        default: []
        x-action:
          - MakeList
        x-check:
          - PathExists
      split:
        description: |
          If no evaluation data, proportion of the training data to
          use for evaluation
        type: number
        default: 0.2

  optim:
    description: All parameters related to optimization
    type: object
    properties:
      loss:
        description: Training losses
        oneOf:
          - type: object
            patternProperties:
              "[0-9]+": { enum: [dice, dice2, cce, wcce, logitmse] }
            minProperties: 1
          - enum: [dice, dice2, cce, wcce, logitmse]
            x-action: { MakeDict: { key: "0" } }
        default: { "0": dice2 }
      metric:
        description: Metrics to monitor
        oneOf:
          - type: array
            items: { enum: [dice, dice2, cce, wcce, logitmse] }
          - enum: [dice, dice2, cce, wcce, logitmse]
            x-action: MakeList
        default: [dice2]
      lr:
        description: Learning rate
        type: number
        default: 1.e-4
      epochs:
        description: Number of epochs
        type: integer
        default: 200

  archi:
    x-help: 1
    description: All parameters related to the net's architecture
    type: object
    properties:
      backbone:
        description: Architecture backbone
        enum: [unet, meshnet, atrousnet]
        default: unet
      nblevels:
        description: Number of pyramid levels
        type: integer
        default: 6
      nbfeat:
        description: Number of features per level in the backbone
        type: [integer, array]
        items: { type: integer }
        minItems: 1
        default: [24]
      nbconv:
        description: Number of convolutions per level in the backbone
        type: integer
        default: 2
      norm:
        description: Type of normalization
        enum: [instance, layer, batch, none]
      affine:
        description: |
          Include a learnable affine transform in the normalization layer
        type: boolean
        default: true
      activation:
        description: Activation function
        enum: [ELU, ReLU]
        default: ELU
      kernel:
        description: Kernel size
        type: integer
        default: 3

  save:
    description: All parameters related to saving the model
    type: object
    properties:
      folder:
        description: |
          Path to output folder. A new folder specific to this run
          will be written inside
        type: string
        default: "."
        x-action: MakeDir
      naming:
        description: |
          Naming convention. A relative path that can contain keys
          {unique}, {run}, {params} which will be replaced by their
          value at runtime
        type: string
        default: "{datetime}_{unique}"
      continue:
        description: Continue from latest checkpoint
        type: boolean
        default: false
        x-action: SetTrue
      every:
        description: Save the model every N epochs
        type: integer
        default: 10
      top:
        description: Save the top K models
        type: integer
        default: 1
      last:
        description: Save the last N models
        type: integer
        default: 0

  sys:
    description: All parameters related to the system
    type: object
    properties:
      seed:
        description: Random seed
        type: integer
        default: 42
      gpu:
        description: IDs of GPUs to use. If True, use default GPU.
        type: [boolean, integer, array]
        item: { type: integer }
        default: false
        x-action: SetTrue